version: '3.5'
 
x-kafka: &kafka
  image: 'bitnami/kafka:latest'
  restart: always 
 
networks:
  kafka-bdp:
    name: kafka-bdp
    driver: bridge
 
services:
  kafka0:
    <<: *kafka
    hostname: kafka0
    ports:
      # - "9094:9094"
      - "19092:19092"
    networks:
      - kafka-bdp
    environment:
      - KAFKA_BROKER_ID=0
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_ENABLE_KRAFT=yes
      # can be generated by running: $docker run -it  bitnami/kafka:latest kafka-storage.sh random-uuid
      - KAFKA_KRAFT_CLUSTER_ID=wbVxbCvYQjirKlUfvSetRg
      - KAFKA_CFG_PROCESS_ROLES=controller,broker

      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:19092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka0:9092,EXTERNAL://localhost:19092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT

      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka0:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_SASL_MECHANISM_INTER_BROKER_PROTOCOL=PLAIN

      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - BITNAMI_DEBUG=yes
    volumes:
      - kafka0_data:/tmp/bitnami/kafka

  kafka-connect:
    image: 'kafka-connect-bdp:1.0.0'
    container_name: 'kafka-connect'
    ports:
      - '8083:8083'
    environment:
      - CONNECT_BOOTSTRAP_SERVERS=kafka0:9092
      - CONNECT_REST_PORT=8083
      - CONNECT_GROUP_ID=quickstart
      - CONNECT_CONFIG_STORAGE_TOPIC=quickstart-config
      - CONNECT_OFFSET_STORAGE_TOPIC=quickstart-offsets
      - CONNECT_STATUS_STORAGE_TOPIC=quickstart-status
      - CONNECT_KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_INTERNAL_KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_INTERNAL_VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_REST_ADVERTISED_HOST_NAME=localhost
      - CONNECT_PLUGIN_PATH=/usr/share/java,/usr/share/confluent-hub-components
    depends_on:
      - kafka0
    volumes:
      - ./ingestion/data:/data
      - ./ingestion/connector/config/connect-log4j.properties:/etc/kafka/connect-log4j.properties
      - ./ingestion/logs:/var/log/kafka/connect.log

    networks:
      - kafka-bdp
  
volumes:
  kafka0_data:
    driver: local
  kafka1_data:
    driver: local
  kafka2_data:
    driver: local